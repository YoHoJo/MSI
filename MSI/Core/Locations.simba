(*
Locations
=========

The Locations file stores all the TLocation records used in MSI.

The source for Locations.simba can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Locations.simba>`_.

*)

(*
MSI_LoadLocation
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_LoadLocation(Which: Integer): Boolean;

Loads the location 'Which' (sets 'Which' in the MSI_Locations global array).
This procedure should only be called in MSI_LoadAllLocations. 'Which' represents
the location constants MSI uses, which can be found in Globals.simba.

.. note::

  | Author: Coh3n
  | Last Updated: 01 November 2010 by Coh3n

Example:

.. code-block:: pascal

  for i := 0 to High(MSI_Locations) do
    MSI_LoadLocation(i);
*)
 function MSI_LoadLocation(Which: Integer): Boolean;
 begin
   case Which of
     LOC_POWER_SKILL:
       with MSI_Locations[Which] do
       begin
         Name := 'Powerskilling';
         Constant := LOC_POWER_SKILL;
         AtBank := False;
         MinDistance := 30;
       end;

     LOC_LOST:
       with MSI_Locations[Which] do
       begin
         Name := 'Lost';
         Constant := LOC_LOST;
         AtBank := False;
       end;

     LOC_VE_TREES:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock east trees';
         Constant := LOC_VE_TREES;
         AtBank := False;
         Tiles := [Point(3276, 3450)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_VE_OAKS:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock east oaks';
         Constant := LOC_VE_OAKS;
         AtBank := False;
         Tiles := [Point(3279, 3428)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_VE_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock east bank';
         Constant := LOC_VE_BANK;
         AtBank := True;
         Tiles := [Point(3253, 3421)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_VE_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock east mine';
         Constant := LOC_VE_MINE;
         AtBank := False;
         Tiles := [Point(3288, 3368)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 30;
       end;

     LOC_VW_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock west mine';
         Constant := LOC_VW_MINE;
         AtBank := False;
         Tiles := [Point(3181, 3367)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_VW_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Varrock west bank';
         Constant := LOC_VW_BANK;
         AtBank := True;
         Tiles := [Point(3187, 3437)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_GE_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Grand Exchange bank';
         Constant := LOC_GE_BANK;
         AtBank := True;
         Tiles := [Point(3169, 3490)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_GE_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Grand Exchange yews';
         Constant := LOC_GE_YEWS;
         AtBank := False;
         Tiles := [Point(3209, 3503), Point(3220, 3502)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_DB_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village bank';
         Constant := LOC_DB_BANK;
         AtBank := True;
         Tiles := [Point(3092, 3240)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_DB_WILLOWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village willows';
         Constant := LOC_DB_WILLOWS;
         AtBank := False;
         Tiles := [Point(3087, 3234)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_DB_TREES:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village trees';
         Constant := LOC_DB_TREES;
         AtBank := False;
         Tiles := [Point(3081, 3268)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_DB_OAKS:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village oaks';
         Constant := LOC_DB_OAKS;
         AtBank := False;
         Tiles := [Point(3101, 3244)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_DB_FISH:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village fishing spots';
         Constant := LOC_DB_FISH;
         AtBank := False;
         Tiles := [Point(3087, 3228)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_DB_CLAY:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village Clay Mine';
         Constant := LOC_DB_CLAY;
         AtBank := False;
         Tiles := [Point(3141, 3316)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_RM_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington Yews';
         Constant := LOC_RM_YEWS;
         AtBank := False;
         Tiles := [Point(2937, 3231), Point(2935, 3228)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 10;
       end;

     LOC_RM_CLAY:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington clay rocks';
         Constant := LOC_RM_CLAY;
         AtBank := False;
         Tiles := [Point(2986, 3236)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_RM_TIN:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington tin rocks';
         Constant := LOC_RM_TIN;
         AtBank := False;
         Tiles := [Point(2986, 3236)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_RM_COPPER:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington copper rocks';
         Constant := LOC_RM_COPPER;
         AtBank := False;
         Tiles := [Point(2979, 3245)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_RM_IRON_1:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington iron rocks 1';
         Constant := LOC_RM_IRON_1;
         AtBank := False;
         Tiles := [Point(2983, 3233)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_RM_IRON_2:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington iron rocks 2';
         Constant := LOC_RM_IRON_2;
         AtBank := False;
         Tiles := [Point(2971, 3239)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_RM_GOLD:
       with MSI_Locations[Which] do
       begin
         Name := 'Rimmington gold rocks';
         Constant := LOC_RM_GOLD;
         AtBank := False;
         Tiles := [Point(2977, 3233)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_FE_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Falador east bank';
         Constant := LOC_FE_BANK;
         AtBank := True;
         Tiles := [Point(3012, 3354)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_PS_WILLOWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Port Sarim willows';
         Constant := LOC_PS_WILLOWS;
         AtBank := False;
         Tiles := [Point(3060, 3253)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_PS_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Port Sarim yews';
         Constant := LOC_PS_YEWS;
         AtBank := False;
         Tiles := [Point(3053, 3270)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 15;
       end;

     LOC_PS_DBOX:
       with MSI_Locations[Which] do
       begin
         Name := 'Port Sarim Deposit Box';
         Constant := LOC_PS_DBOX;
         AtBank := True;
         Tiles := [Point(3046, 3235)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_LSW_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Lumbridge swamp west mine';
         Constant := LOC_LSW_MINE;
         AtBank := False;
         Tiles := [Point(3148, 3147)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 30;
       end;

     LOC_LSE_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Lumbridge swamp east mine';
         Constant := LOC_LSE_MINE;
         AtBank := False;
         Tiles := [Point(3227, 3148)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 30;
       end;

     LOC_DB_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Draynor Village Yews';
         Constant := LOC_DB_YEWS;
         AtBank := False;
         Tiles := [Point(3153, 3229), Point(3166, 3222), Point(3181, 3227)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 30;
       end;

     LOC_EV_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Edgeville bank';
         Constant := LOC_EV_BANK;
         AtBank := True;
         Tiles := [Point(3093, 3493)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 30;
       end;

     LOC_EV_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Edgeville yews';
         Constant := LOC_EV_YEWS;
         AtBank := False;
         Tiles := [Point(3087, 3472), Point(3087, 3480)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_BBV_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Barbarian Village mine';
         Constant := LOC_BBV_MINE;
         AtBank := False;
         Tiles := [Point(3079, 3423)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_BBV_FISH:
       with MSI_Locations[Which] do
       begin
         Name := 'Barbarian Village fishing spot';
         Constant := LOC_BBV_FISH;
         AtBank := False;
         Tiles := [Point(3108, 3434), Point(3103, 3426)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_SV_MAGICS:
       with MSI_Locations[Which] do
       begin
         Name := 'Seers Village Magic trees';
         Constant := LOC_SV_MAGICS;
         AtBank := False;
         Tiles := [Point(2702, 3398)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 20;
       end;

     LOC_SV_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Seers Village Bank';
         Constant := LOC_SV_BANK;
         AtBank := True;
         Tiles := [Point(2726, 3492)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_SV_MAPLES:
       with MSI_Locations[Which] do
       begin
         Name := 'Seers Village Maples';
         Constant := LOC_SV_MAPLES;
         AtBank := False;
         Tiles := [Point(2724, 3502)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_SV_YEWS:
       with MSI_Locations[Which] do
       begin
         Name := 'Seers Village Yews';
         Constant := LOC_SV_YEWS;
         AtBank := False;
         Tiles := [Point(2712, 3462), Point(2706,3463)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 5;
       end;

     LOC_GUILD_MINE:
       with MSI_Locations[Which] do
       begin
         Name := 'Mining Guild';
         Constant := LOC_GUILD_MINE;
         AtBank := False;
         Tiles := [Point(3035, 9737), Point(3048, 9737)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_AK_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Al Kharid Bank';
         Constant := LOC_AK_BANK;
         AtBank := True;
         Tiles := [Point(3270, 3165)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_AK_RANGE:
       with MSI_Locations[Which] do
       begin
         Name := 'Al Kharid Cooking Range';
         Constant := LOC_AK_RANGE;
         AtBank := False;
         Tiles := [Point(3273, 3179)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_CB_BANK:
       with MSI_Locations[Which] do
       begin
         Name := 'Catherby Bank';
         Constant := LOC_CB_BANK;
         AtBank := True;
         Tiles := [Point(2809, 3442)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_CB_FISH:
       with MSI_Locations[Which] do
       begin
         Name := 'Catherby Fishing Spots';
         Constant := LOC_CB_FISH;
         AtBank := False;
         Tiles := [Point(2837, 3432), Point(2845, 3430),
                   Point(2853, 3424), Point(2859, 3427)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_KJ_STILES:
       with MSI_Locations[Which] do
       begin
         Name := 'Stiles on Karamja';
         Constant := LOC_KJ_STILES;
         AtBank := False;
         Tiles := [Point(2851, 3141)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_KJ_FISH:
       with MSI_Locations[Which] do
       begin
         Name := 'Karamja Fishing Spot';
         Constant := LOC_KJ_FISH;
         AtBank := False;
         Tiles := [Point(2924, 3175)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 25;
       end;

     LOC_DRD_COAL:
       with MSI_Locations[Which] do
       begin
         Name := 'Dwarven Resouce Dungeon Coal';
         Constant := LOC_DRD_COAL;
         AtBank := False;
         Tiles := [Point(1065, 4574)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance :=20;
       end;

     LOC_DRD_DBOX:
       with MSI_Locations[Which] do
       begin
         Name := 'Dwarven Resouce Dungeon DBox';
         Constant := LOC_DRD_DBOX;
         AtBank := True;
         Tiles := [Point(1043, 4578)];
         Points := MSI_ConvertTilePath(Tiles);
         MinDistance := 10;
       end;
   end;

   Result := (MSI_Locations[Which].Name <> '');
 end;

(*
MSI_LoadAllLocations
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_LoadAllLocations;

Loads all the locations into the MSI_Locations array.  This procedure should
only be called in MSI_Setup.

.. note::

  | Author: Coh3n
  | Last Updated: 02 August 2010 by Coh3n

*)
procedure MSI_LoadAllLocations;
var
  i: Integer;
begin
  for i := 0 to High(MSI_Locations) do
    MSI_LoadLocation(i);
end;

